name: rust

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_TERM_COLOR: always

on:
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]
  repository_dispatch:
    types: [ rust ]
  schedule:
    - cron: "30 21 * * 0" # Every Sunday at 9:30pm UTC
  workflow_dispatch:

permissions: write-all

jobs:
  web:
    name: web
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        platform: [ web ]
        target: [ wasm32-unknown-unknown ]
        toolchain: [ stable ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: rustup
        run: |
          rustup default ${{ matrix.toolchain }}
          rustup target add ${{ matrix.target }}
          rustup update
      - name: build
        run: cargo build --all-features -r -v --workspace --target ${{ matrix.target }}
      - name: cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ matrix.toolchain }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/wasm32-unknown-unknown/release
            target/wasm32-unknown-unknown/release
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.toolchain }}-${{ matrix.target }}-
            ${{ runner.os }}-cargo-${{ matrix.toolchain }}-
            ${{ runner.os }}-cargo-
            ${{ runner.os }}-
